{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/interceptors/corsInterceptor.ts","./src/app/shared/index.ts","./src/app/shared/material.module.ts","./src/app/shared/shared.module.ts","./src/main.ts","./src/polyfills.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { NoPreloading, RouterModule, Routes } from '@angular/router';\r\n\r\n// import { UserPermissionGuard } from '@app/core/guards/user-permission.guard'\r\n\r\n// import { RoleType } from '@shared/models/role-type';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home',\r\n        loadChildren: () => import('./home/home.module').then((m) => m.HomeModule)//,\r\n        //canActivate: [UserPermissionGuard],\r\n        //data: {\r\n        //    breadcrumb: { label: 'Users' },\r\n        //    roles: `${RoleType.Admin}` }\r\n    },  {\r\n    path: '**',\r\n      redirectTo: '/home'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      onSameUrlNavigation: `reload`,\r\n      enableTracing: false,\r\n      preloadingStrategy: NoPreloading,\r\n      relativeLinkResolution: 'legacy'\r\n      })\r\n    ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent  {}\n \n","<mat-toolbar color=\"primary\">\r\n    <!-- browse icons https://fonts.google.com/icons?selected=Material+Icons -->\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n        <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>CHINOOK\r\n    </span>\r\n\r\n    <span class=\"spacer\"></span>\r\n   \r\n\r\n</mat-toolbar>\r\n<div class=\"app-main-panel\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { NoPreloading, RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { SharedModule } from '@shared'\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { AppComponent } from './app.component';\nimport { CorsInterceptor } from './core/interceptors/corsInterceptor';\n\n// export function initUser(userService: UserService): () => any {\n//   return () => userService.getIdentity();\n\n    // // getIdentity(): Promise<any> {\n    // //   return this.http.get<User>(`${environment.baseUrl}/common/GetIdentity`)\n    // //       .toPromise().then((result: User) => {\n    // //           if(result)\n    // //              console.info(`Identity information for ${result.umsUserId} loaded successfully.`);\n\n    // //           this.identity = result;\n    // //           return result;\n    // //       }, (error: any) => {\n    // //           console.error('Could not get identity information from the server!');\n    // //           console.error(error);\n    // //           return error;\n    // //       });\n    // // }\n\n// }\n\n// export function getEnvironment(bootstrapService: BootstrapService): () => any {\n//   return () => bootstrapService.getEnvironmentName();\n\n@NgModule({\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: CorsInterceptor, multi: true },\n  ],\n  imports: [ \n    BrowserModule, \n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ],\n  //providers: [\n  //  { provide: APP_INITIALIZER, useFactory: initUser, multi: true, deps: [UserService] },\n  //  { provide: APP_INITIALIZER, useFactory: getEnvironment, multi: true, deps: [BootstrapService] },\n  //  httpInterceptorProviders\n  //],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CorsInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const userToken = 'secure-user-token';\r\n\r\n    \r\n    const modifiedReq = req.clone({ \r\n      setHeaders: {'content-type': 'application/json','Access-Control-Allow-Origin': '*'},\r\n    });\r\n    return next.handle(modifiedReq);\r\n  }\r\n}\r\n","export { SharedModule } from './shared.module'","import { NgModule } from '@angular/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n/**\n * NgModule that includes all Material modules.\n */\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    ScrollingModule,\n    DragDropModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ReactiveFormsModule\n  ],\n  declarations: [],\n  entryComponents: []\n})\nexport class MaterialModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n//import { NgSelectModule } from '@ng-select/ng-select';\n import { NgxDatatableModule } from '@swimlane/ngx-datatable';\n//import { NgPipesModule } from 'ngx-pipes';\n//import { ConfirmationDialogComponent } from './components/confirmation-dialog/confirmation-dialog.component';\n//import { DollarComponent } from './components/dollar/dollar.component';\n//import { FooterComponent } from './components/footer/footer.component';\n//import { NavItemComponent } from './components/navigation/nav-item/nav-item.component';\n//import { NavigationComponent } from './components/navigation/navigation.component';\n//import { PhireButtonGroupComponent } from './components/phire-button-group/phire-button-group.component';\n//import { TfIconComponent } from './components/tf-icon/tf-icon.component';\nimport { MaterialModule } from './material.module';\n//import { CustomPipesModule } from './pipes/custom-pipes.module';\n\n// sharedModules are going to be available for all modules that import SharedModule\nconst sharedModules = [\n  MaterialModule,\n // CustomPipesModule,\n  HttpClientModule,\n // NgPipesModule,\n  RouterModule,\n  FormsModule,\n  ReactiveFormsModule,\n // NgSelectModule,\n  NgxDatatableModule\n];\n\n// componentItems are going to be available for all modules that import SharedModule\n// if a component should not be available outside of the SharedModule,\n// only include it in the declarations and exclude it from the componentItems\n//const componentItems = [\n//  PhireButtonGroupComponent,\n//  NavigationComponent,\n//  NavItemComponent,\n//  FooterComponent,\n//  TfIconComponent,\n//  ConfirmationDialogComponent,\n//  DollarComponent\n//];\n\nconst resolvers = [];\n@NgModule({\n  declarations: [], // add componentItems when defined\n  imports: [CommonModule, sharedModules],\n  exports: [sharedModules] // add componentItems when defined\n})\nexport class SharedModule {}","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`."],"names":[],"sourceRoot":"webpack:///"}