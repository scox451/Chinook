{"version":3,"file":"245.js","mappings":";;;;;;;;;;;;;;AAA8C;;;;;;;;;;;;;;;;;;;ACQvC,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,SAAS;QAEP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,+BAA+B,CAAC,CAAC;IAEjE,CAAC;;wEARU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;ACLmC;AAEN;;;AAEjD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0DAAa,EAAE,CAAC,CAAC;AAMzD,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHAHnB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,iBAAiB,oFAFlB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;ACR6C;;;;;;;;;;IC6BjE,wEAA6C;IAC3C,sEAAM;IACJ,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC9B,4DAAM;IACR,qEAAe;;;IANP,0DAAe;IAAf,+EAAe;IACf,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAyB;IAAzB,yFAAyB;IACzB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAmB;IAAnB,mFAAmB;;ADxBxB,MAAM,aAAa;IAQxB,YAAoB,EAAe,EAAU,YAA0B;QAAnD,OAAE,GAAF,EAAE,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QANvE,mBAAc,GAAgB,IAAI,uDAAW,EAAE,CAAC;QAIhD,gBAAW,GAAS,EAAE,CAAC;IAEmD,CAAC;IAE3E,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QACN,wCAAwC;QACxC,mCAAmC;QACnC,WAAW;QACX,8BAA8B;QAC9B,yBAAyB;QACzB,kCAAkC;QAClC,iCAAiC;QAEjC,8CAA8C;QAC9C,SAAS;QACT,MAAM;QACN,mCAAmC;QACnC,2BAA2B;QAC3B,QAAQ;QAER,yDAAyD;QACzD,iCAAiC;QACjC,MAAM;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,aAAa,EAAE,IAAI,CAAC,aAAa;SAClC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,KAAI,CAAC;IAEV,MAAM,KAAI,CAAC;;0EA5CA,aAAa;2GAAb,aAAa;QCZ1B,0EAA+B;QAC7B,yEAAiB;QACf,mGAAuD;QACrD,uFAAwC;QACtC,2EAAU;QAAA,oEAAS;QAAA,4DAAW;QAChC,4DAAoB;QACpB,uFAAwC;QACtC,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC3B,4DAAoB;QACtB,4DAA0B;QAC5B,4DAAM;QACN,0EAAe;QACb,qEAA0B;QAC1B,kFAAgB;QACd,uEAAqG;QACvG,4DAAiB;QACjB,qEAA0B;QAC5B,4DAAM;QAER,4DAAO;QASP,0EAAgC;QAC9B,0EAAoD;QAClD,8HAQe;QACjB,4DAAM;QACR,4DAAM;;;QAxCA,qFAAwB;QA6BA,2DAAuB;QAAvB,8EAAuB;QAChB,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;;AC9BA;AAGR;AACmB;AAET;;AACjD,4EAA4E;AASrE,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;2GAFZ,CAAC,yDAAY,EAAE,mEAAiB,EAAE,iDAAY,CAAC;mIAE7C,UAAU,mBALnB,0DAAa;QACf,yBAAyB;iBAEf,yDAAY,EAAE,mEAAiB,EAAE,iDAAY","sources":["./src/app/core/services/index.ts","./src/app/core/services/track.service.ts","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts"],"sourcesContent":["export { TrackService } from './track.service'","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs'\r\nimport { Track } from '@models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTracks(): Observable<Track[]> {\r\n\r\n    return this.http.get<Track[]>(`https://localhost:5001/tracks`);\r\n\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: HomeComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }","import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\n\nimport { TrackService } from '@services';\nimport { Track } from '@models';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: `./home.component.html`,\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  searchForm: FormGroup;\n  firstNameField: FormControl = new FormControl();\n  lastNameField: FormControl;\n\n  results: Track[];\n  displayMode:string =\"\";\n\n  constructor(private fb: FormBuilder, private trackService: TrackService) {}\n\n  ngOnInit(): void {\n    this.initControls();\n    this.trackService.getTracks().subscribe((data:Track[]) => {\n         this.results = data;\n       });\n    // this,this.displayMode=\"list-results\";\n    // this.firstNameField.valueChanges\n    //   .pipe(\n    //     distinctUntilChanged(),\n    //     debounceTime(500),\n    //     switchMap((filterText) => {\n    //       if (!filterText) return;\n\n    //       return this.trackService.getTracks();\n    //     })\n    //   )\n    //   .subscribe((data:Track[]) => {\n    //     this.results = data;\n    //   });\n\n    // this.imdbService.search(\"shawshank\").subscribe(data=>{\n    //   this.results = data.results;\n    // });\n  }\n\n  initControls() {\n    this.searchForm = this.fb.group({\n      firstNameField: this.firstNameField,\n      lastNameField: this.lastNameField,\n    });\n  }\n\n  clear() {}\n\n  search() {}\n}\n","<form [formGroup]=\"searchForm\">\r\n  <div class=\"row\">\r\n    <mat-button-toggle-group #group=\"matButtonToggleGroup\">\r\n      <mat-button-toggle value=\"tile-results\">\r\n        <mat-icon>grid_view</mat-icon>\r\n      </mat-button-toggle>\r\n      <mat-button-toggle value=\"list-results\">\r\n        <mat-icon>list</mat-icon>\r\n      </mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n  </div>\r\n  <div class=row>\r\n    <div class=\"spacer\"></div>\r\n    <mat-form-field>\r\n      <input matInput name=\"firstName\" type=\"text\" formControlName=\"firstNameField\" placeholder=\"Search\" />\r\n    </mat-form-field>\r\n    <div class=\"spacer\"></div>\r\n  </div>\r\n\r\n</form>\r\n<!-- <div class=\"actions\">\r\n  <button mat-stroked-button (click)=\"clear()\">\r\n    Clear\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"search()\" cdkFocusInitial>\r\n    Search\r\n  </button>\r\n</div> -->\r\n<div class=\"row-center-content\">\r\n  <div class=\"search-results\" [ngClass]=\"group.value\">\r\n    <ng-container *ngFor=\"let result of results\">\r\n      <div >\r\n        <h5>{{result.Name}}</h5>\r\n        <h5>{{result.album.title}}</h5>\r\n        <h5>{{result.mediaType.name}}</h5>\r\n        <h5>{{result.genre.name}}</h5>\r\n        <h5>{{result.composer}}</h5>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n<!-- <mat-form-field>\r\n<input type=\"text\"\r\n       placeholder=\"Order#\"\r\n       matInput\r\n       name=\"orderField\"\r\n       formControlName=\"orderField\"\r\n       [matAutocomplete]=\"auto\"\r\n       required>\r\n<mat-autocomplete #auto=\"matAutocomplete\"\r\n                  (optionSelected)='selectedOrder=$event.option.value'\r\n                  [displayWith]=\"displayFn\">\r\n    <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n    <ng-container *ngIf=\"!isLoading\">\r\n        <mat-option *ngFor=\"let order of orders\"\r\n                    [value]=\"order\">\r\n            {{order.orderId}}\r\n        </mat-option>\r\n    </ng-container>\r\n</mat-autocomplete>\r\n<mat-error *ngIf=\"orderField.hasError('invalid')\">\r\n    Select an order\r\n</mat-error>\r\n</mat-form-field>\r\n<mat-form-field>\r\n<mat-select placeholder=\"Payment type\"\r\n            formControlName=\"paymentTypeField\">\r\n    <mat-option *ngFor=\"let item of paymentTypes\"\r\n                [value]=\"item\">\r\n        {{item}}\r\n    </mat-option>\r\n</mat-select>\r\n</mat-form-field>\r\n<mat-form-field>\r\n<input matInput\r\n       formControlName=\"amountField\"\r\n       type=\"number\"\r\n       placeholder=\"Amount\">\r\n<span matPrefix>$</span>\r\n</mat-form-field>\r\n<mat-form-field *ngIf=\"hasCorrectedAmountField\">\r\n<input matInput\r\n       formControlName=\"correctedAmountField\"\r\n       type=\"number\"\r\n       placeholder=\"Corrected amount\"\r\n       (keypress)=\"inputService.isNumericDecimal($event)\">\r\n<span matPrefix>$</span>\r\n<mat-error *ngIf=\"correctedAmountField.hasError('max')\">\r\n    Must be less than $100,000\r\n</mat-error>\r\n<mat-error *ngIf=\"correctedAmountField.hasError('min')\">\r\n    Must be more than $0\r\n</mat-error>\r\n</mat-form-field>\r\n<mat-form-field>\r\n<input matInput\r\n       formControlName=\"checkNumberField\"\r\n       placeholder=\"Check #\"\r\n       maxlength=\"50\">\r\n</mat-form-field>\r\n<mat-form-field>\r\n<textarea matInput\r\n          [matTextareaAutosize]=\"true\"\r\n          minRows=\"2\"\r\n          placeholder=\"Comment\"\r\n          formControlName=\"commentField\"></textarea>\r\n</mat-form-field> -->","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '@shared';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\n\r\nimport { HomeComponent } from './home.component';\r\n//import { ViewDetailComponent } from './view-detail/view-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent\r\n  //  , ViewDetailComponent\r\n  ],\r\n  imports: [CommonModule, HomeRoutingModule, SharedModule]\r\n})\r\nexport class HomeModule {}"],"names":[],"sourceRoot":"webpack:///"}